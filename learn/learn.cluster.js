// Generated by CoffeeScript 1.10.0
(function() {
  var _, cluster, http, i, listenter, log, numCPUs, ref, ref1, worker;

  cluster = require('cluster');

  http = require('http');

  numCPUs = require('os').cpus().length;

  log = console.log;

  if (cluster.isMaster) {
    for (i = 1, ref = numCPUs; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {
      cluster.fork();
    }
    listenter = function(worker) {
      return worker.on('message', function(msg) {
        log("recive message " + msg + ", and kill it");
        worker.kill();
        return setTimeout(function() {
          return cluster.fork();
        }, 2000);
      });
    };
    ref1 = cluster.workers;
    for (_ in ref1) {
      worker = ref1[_];
      listenter(worker);
    }
    cluster.on('listening', function(worker, address) {
      return log("listening : work " + worker.process.pid + ", address: " + address.address + " : " + address.port);
    });
    cluster.on('exit', function(worker, code, signal) {
      return log("worker " + worker.process.pid + " died");
    });
  } else {
    http.createServer(function(req, res) {
      res.writeHead(200);
      log("Worker " + cluster.worker.id + " received!");
      setTimeout(function() {
        res.end("hello world\n");
        process.send("Working " + cluster.worker.id + " is working!");
      }, 3000);
    }).listen(8000);
  }

}).call(this);

//# sourceMappingURL=learn.cluster.js.map
